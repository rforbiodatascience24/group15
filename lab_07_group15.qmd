---
title: "lab_07_group15.qmd"
format:
  html:
    embed-resources: true
editor: visual
---

Group 15:

-   Jos√© Dinis Coelho da Silva Ferreira, s212484

-   Maria Gabriela Frascella, s233113

-   Paula Gomez-Plana Rodriguez, s233165

-   Alicia Llorente Herrero, s233658

-   Ona Saulianskaite, s232958

## Overview of the dataset used

In this report, we will analyze a breast cancer biopsy dataset from the University of Wisconsin Hospitals, Madison, collected by Dr. William H. Wolberg. The dataset consists of biopsy data from 699 patients, each with nine attributes scored on a scale from 1 to 10. These attributes describe various characteristics of breast tumors, and each observation is classified as either malignant or benign, providing a valuable dataset for assessing and predicting tumor types.

## Loading libraries
```{r}
library(tidyverse)
library(broom)  # devtools::install_github("tidymodels/broom")
library(cowplot)
library(corrplot)
```

## Loading data
```{r}
biopsy <- read_csv("https://wilkelab.org/classes/SDS348/data_sets/biopsy.csv")
```

## Analysis

### Correlation analysis of different attributes
```{r}
# Corelation matrix without nominal attribute: "outcome"
biopsy |>
  select(-outcome) |>
  cor(method = "pearson") |>
  corrplot(method = "color", type = "full", tl.cex = 0.8, addCoef.col = "black", 
           number.cex = 0.7, number.digits = 2)
```
Since we are working with a multivariate dataset, where each observation contains multiple attributes, it can be challenging to identify correlations and relationships between these attributes. In such cases, Principal Component Analysis (PCA) is a useful tool, as it reduces the dimensionality of the dataset while preserving as much of the variance as possible. By transforming the original variables into a set of uncorrelated principal components, PCA helps reveal patterns, making it easier to analyze and interpret the underlying structure of the data.

### Principal component analyis

```{r}
pca_fit <- biopsy %>% 
  select(where(is.numeric)) %>% # retain only numeric columns
  prcomp(scale = TRUE) # do PCA on scaled data
```

#### Plotting the data in PC coordinates
```{r}
# Plotting the data in PC coordinates
pca_fit %>%
  augment(biopsy) %>% # add original dataset back in
  ggplot(aes(.fittedPC1, .fittedPC2, color = outcome)) + 
  geom_point(size = 1.5) +
  scale_color_manual(
    values = c(malignant = "#D55E00", benign = "#0072B2")
  ) +
  theme_half_open(12) + background_grid()
```
#### Plotting rotation (eigenvector) matrix
The rotation matrix contains the eigenvectors of the covariance matrix of the data. These eigenvectors **represent the new directions (or axes) in the data space along which the variance of the data is maximized**. Each eigenvector corresponds to one principal component.
```{r}
# extract rotation matrix
pca_fit %>%
  tidy(matrix = "rotation")
```

```{r}
# define arrow style for plotting
arrow_style <- arrow(
  angle = 20, ends = "first", type = "closed", length = grid::unit(8, "pt")
)

# plot rotation matrix
pca_fit %>%
  tidy(matrix = "rotation") %>%
  pivot_wider(names_from = "PC", names_prefix = "PC", values_from = "value") %>%
  ggplot(aes(PC1, PC2)) +
  geom_segment(xend = 0, yend = 0, arrow = arrow_style) +
  geom_text(
    aes(label = column),
    hjust = 1, nudge_x = -0.02, 
    color = "#904C2F"
  ) +
  xlim(-1.25, .5) + ylim(-.5, 1) +
  coord_fixed() + # fix aspect ratio to 1:1
  theme_minimal_grid(12)
```

#### Variance explained by each PC 
```{r}
pca_fit %>%
  tidy(matrix = "eigenvalues")
```

```{r}
pca_fit %>%
  tidy(matrix = "eigenvalues") %>%
  ggplot(aes(PC, percent)) +
  geom_line(color = "#56B4E9", alpha = 0.8) +
  scale_x_continuous(breaks = 1:9) +
  scale_y_continuous(
    labels = scales::percent_format(),
    expand = expansion(mult = c(0, 0.01))
  ) +
  theme_minimal_hgrid(12)
```
The first component captures approximately 65% of the variation in the data and, as we can see from the first plot in this post, nicely separates the benign samples from the malignant samples.





